
#define HBDEBUG(i)

bool
heartbeatDetected(int IRSensorPin, int delay)
{
  static int maxValue = 0;
  static bool isPeak = false;
  int rawValue;
  bool result = false;
    
  rawValue = analogRead(IRSensorPin);
  // Separated because analogRead() may not return an int
  rawValue *= (1000/delay);
  HBDEBUG(Serial.print(isPeak); Serial.print("p, "));
  HBDEBUG(Serial.print(rawValue); Serial.print("r, "));
  HBDEBUG(Serial.print(maxValue); Serial.print("m, "));

  // If sensor shifts, then max is out of whack.
  // Just reset max to a new baseline.
  if (rawValue * 4L < maxValue) {
    maxValue = rawValue * 0.8;
    HBDEBUG(Serial.print("RESET, "));
  }
  
  // Detect new peak
  if (rawValue > maxValue - (1000/delay)) {
    // Only change peak if we find a higher one.
    if (rawValue > maxValue) {
      maxValue = rawValue;
    }
    // Only return true once per peak.
    if (isPeak == false) {
      result = true;
      Serial.print(result); Serial.print(",  *");
    }
    isPeak = true;
  } else if (rawValue < maxValue - (3000/delay)) {
    isPeak = false;
    // Decay max value to adjust to sensor shifting
    // Note that it may take a few seconds to re-detect
    // the signal when sensor is pushed on meatier part
    // of the finger. Another way would be to track how
    // long since last beat, and if over 1sec, reset
    // maxValue, or to use derivatives to remove DC bias.
    maxValue-=(1000/delay);
 }
  HBDEBUG(Serial.print("\n"));
  return result;
}


/////LCD 모듈/////

#include <LiquidCrystal_I2C.h>  //LiquidCrystalI2C 헤더파일 호출
LiquidCrystal_I2C lcd(0x27,16,2);  //LCD의 address 주소 및 크기 입력

/////온습도센서/////

#include <Wire.h>
char HUMI_Sensor = A1; // A1 센서에 연결
int Sensor_val; // 센서 ADC 값 저장 변수
byte dht11_dat[5]; // 센서 변수
byte dht11_in; // 센서 변수
byte i;
byte read_dht11_dat() //온습도 센서 모듈 값 읽어오는 함수
{
  byte i=0; //for문 변수
  byte result =0; //리턴 변수
  for (i=0;i<8;i++) // for문 9번 반복
  {
    while (!digitalRead(HUMI_Sensor)); // 센서 값이 1이 될 때까지 무한루프
    delayMicroseconds(30); // 30us 대기
    if (digitalRead(HUMI_Sensor)!=0) // 센서 값이 0과 같지 않으면
    bitSet(result,7-i); //bitSet(n,x) n이라는 변수에 x번째의 비트 ON
    while (digitalRead(HUMI_Sensor));  //센서 값이 0이 될 때까지 무한루프
  }
  return result; //result의 값을 리턴
  }
                       
////////////////////////////////////////////////////////////////////////
// Arduino main code
////////////////////////////////////////////////////////////////////////
//int ledPin=13;
int analogPin=0;
int LED_R = 4; // 빨간색 LED 핀
int LED_G = 3; // 초록색 LED 핀
int LED_B = 2; // 파란색 LED 핀

void setup()
{
  // Built-in arduino board pin for the display LED
  //pinMode(ledPin,OUTPUT);
  
  // Init serial console
  Serial.begin(9600);
  Serial.println("Heartbeat detection sample code.");

  pinMode(LED_R,OUTPUT); // 빨간색 LED 출력 설정
  pinMode(LED_G,OUTPUT); // 초록색 LED 출력 설정
  pinMode(LED_B,OUTPUT); // 파란색 LED 출력 설정

  pinMode(HUMI_Sensor,OUTPUT); //센서 핀 출력 설정
  digitalWrite(HUMI_Sensor, HIGH); // 센서값 HIGH

  ///LCD모듈///
  lcd.init();  //lcd 초기화 함수
  lcd.backlight(); //lcd 백라이트 함수
  
}

const int delayMsec = 60; // 100msec per sample

// The main loop blips the LED and computes BPMs on serial port.
void loop()
{
    //센서를 이용해서 온도와 습도를 측정//
  digitalWrite(HUMI_Sensor, LOW); //센서 off
  delay(18); //0.18초 지연
  digitalWrite(HUMI_Sensor, HIGH); //센서 on
  delayMicroseconds(5); //5us 지연
  pinMode(HUMI_Sensor, INPUT); //센서 핀을 입력으로 설정
  delayMicroseconds(200); //200us 지연
  for (i=0;i<5;i++){
    dht11_dat[i] = read_dht11_dat();
  } //40bit의 데이터 수신
  pinMode(HUMI_Sensor, OUTPUT); //센서 핀을 출력으로 설정
  digitalWrite(HUMI_Sensor, HIGH); //센서값 HIGH
  byte dht11_check_sum = dht11_dat[0] + dht11_dat[2]; //check check_sum
  
  ///심박수 측정////
  static int beatMsec = 0;
  int heartRateBPM = 0;
  
  if (heartbeatDetected(analogPin, delayMsec)) {
    heartRateBPM = 60000 / beatMsec;
    //digitalWrite(ledPin,1);

    // Print msec/beat and instantaneous heart rate in BPM
    Serial.print(beatMsec);
    Serial.print(", ");
    Serial.println(heartRateBPM);
    
    Serial.print(dht11_dat[0], DEC); // 모니터에 습도 값 출력
    Serial.print('%'); //모니터에 % 출력
    Serial.print(dht11_dat[2], DEC); // 모니터에 온도 값 출력
    Serial.println('C'); // 모니터에 C 출력
    
    beatMsec = 0;
    
    
    if (heartRateBPM > 300)
      {
       digitalWrite(LED_R, HIGH);
       digitalWrite(LED_G, LOW);
       delay(1000); 
       }
    else{
    digitalWrite(LED_R, LOW);
    digitalWrite(LED_G, HIGH);
      }

  }

  ///lcd 모듈///
  lcd.setCursor(0,0); //커서 첫번째칸 첫번째줄 위치
  lcd.print("BPM,TEMP,HUMI");

      
  delay(delayMsec);
  beatMsec += delayMsec;



}
