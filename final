//////pulse sensor//////
#define PROCESSING_VISUALIZER 1
#define SERIAL_PLOTTER  2

//심장박동 variables
int pulsePin = 0;                 // Pulse Sensor purple wire connected to analog pin 0
int blinkPin = 13;                // pin to blink led at each beat
int fadePin = 5;                  // pin to do fancy classy fading blink at each beat
int fadeRate = 0;                 // used to fade LED on with PWM on fadePin

// Volatile Variables, used in the interrupt service routine!
volatile int BPM;                   // int that holds raw Analog in 0. updated every 2mS
volatile int Signal;                // holds the incoming raw data
volatile int IBI = 600;             // int that holds the time interval between beats! Must be seeded!
volatile boolean Pulse = false;     // "True" when User's live heartbeat is detected. "False" when not a "live beat".
volatile boolean QS = false;        // becomes true when Arduoino finds a beat.

// SET THE SERIAL OUTPUT TYPE TO YOUR NEEDS
// PROCESSING_VISUALIZER works with Pulse Sensor Processing Visualizer
//      https://github.com/WorldFamousElectronics/PulseSensor_Amped_Processing_Visualizer
// SERIAL_PLOTTER outputs sensor data for viewing with the Arduino Serial Plotter
//      run the Serial Plotter at 115200 baud: Tools/Serial Plotter or Command+L
static int outputType = SERIAL_PLOTTER;

//비접촉온도센서
#include <Wire.h>
#include <Adafruit_MLX90614.h>

Adafruit_MLX90614 mlx = Adafruit_MLX90614();

//사운드센서
int led = 12;
int threshold = 80; 
int volume;

//온습도센서
#include <DHT.h>
#include<LiquidCrystal.h>
#define DHTPIN 2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
int t;
int h;


void setup(){
  
  //비접촉온도센서
   Serial.begin(9600);
   Serial.println("Adafruit MLX90614 test");  
   mlx.begin();  

  //온습도센서
   dht.begin();

  //사운드센서
   pinMode(led, OUTPUT);  
  
  //심장박동
   pinMode(blinkPin,OUTPUT);         // pin that will blink to your heartbeat!
   pinMode(fadePin,OUTPUT);          // pin that will fade to your heartbeat!
   interruptSetup();                 // sets up to read Pulse Sensor signal every 2mS


}

void loop(){

  //비접촉온도센서
   Serial.print("Ambient = "); 
   Serial.print(mlx.readAmbientTempC()); 
   Serial.print("*C\tObject = "); 
   Serial.print(mlx.readObjectTempC()); 
   Serial.println("*C");
   Serial.print("Ambient = ");
   Serial.print(mlx.readAmbientTempF()); 
   Serial.print("*F\tObject = "); 
   Serial.print(mlx.readObjectTempF()); 
   Serial.println("*F");
   Serial.println();
   delay(100);

  //사운드센서
   volume = analogRead(A1); 
   Serial.print("사운드 = ");
   Serial.println(volume);
   delay(100);
 
  if(volume>=threshold){
    digitalWrite(led, HIGH); 
  }  
  else{
    digitalWrite(led, LOW); 
  }


  //심장박동
   serialOutput() ;

   if (QS == true){     
     fadeRate = 255;         
     serialOutputWhenBeatHappens();   
     QS = false;                     
   }
     ledFadeToBeat();                      
     delay(100);                            

  
  //온습도센서
   t = dht.readTemperature();
   h = dht.readHumidity();
   Serial.print("온도= ");
   Serial.print(t);
   Serial.print(" °C");
   Serial.print(", 습도= ");
   Serial.print(h);
   Serial.println(" %");
   delay(100);
 
 }

void ledFadeToBeat(){
    fadeRate -= 15;                         //  set LED fade value
    fadeRate = constrain(fadeRate,0,255);   //  keep LED fade value from going into negative numbers!
    analogWrite(fadePin,fadeRate);          //  fade LED
  }
